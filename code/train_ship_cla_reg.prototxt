name: "Net2"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'roi'
  top: 'label'
  top: 'bbox_target'
  top: 'bbox_inside_weights'
  top: 'bbox_outside_weights'
  python_param {
    module: 'detect.data_train_layer'
    layer: 'RoIDataLayer'
  }
}

#========= conv ============
layer {
	name: "conv1_1"
	type: "Convolution"
	bottom: "data"
	top: "conv1_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu1_1"
	type: "ReLU"
	bottom: "conv1_1"
	top: "conv1_1"
}
layer {
	name: "conv1_2"
	type: "Convolution"
	bottom: "conv1_1"
	top: "conv1_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu1_2"
	type: "ReLU"
	bottom: "conv1_2"
	top: "conv1_2"
}
layer {
	name: "conv1_3"
	type: "Convolution"
	bottom: "conv1_2"
	top: "conv1_3"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu1_3"
	type: "ReLU"
	bottom: "conv1_3"
	top: "conv1_3"
}
layer {
	name: "pool1"
	type: "Pooling"
	bottom: "conv1_3"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv2_1"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
    weight_filler {
type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu2_1"
	type: "ReLU"
	bottom: "conv2_1"
	top: "conv2_1"
}

layer {
	name: "conv2_2"
	type: "Convolution"
	bottom: "conv2_1"
	top: "conv2_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 2
    weight_filler {
type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu2_2"
	type: "ReLU"
	bottom: "conv2_2"
	top: "conv2_2"
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "conv2_2"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}
layer {
	name: "conv3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu3"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}
layer {
	name: "conv4"
	type: "Convolution"
	bottom: "conv3"
	top: "conv4"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu4"
	type: "ReLU"
	bottom: "conv4"
	top: "conv4"
}
layer {
	name: "conv5"
	type: "Convolution"
	bottom: "conv4"
	top: "conv5"
	param { lr_mult: 1.0 }
	param { lr_mult: 2.0 }
#	param { lr_mult: 0 }
#	param { lr_mult: 0 }
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
	}
}
layer {
	name: "relu5"
	type: "ReLU"
	bottom: "conv5"
	top: "conv5"
}
#========= pooling ============

layer {
  name: "roi_pool_conv5"
  type: "ROIAlign"
  bottom: "conv5"
  bottom: "roi"
  top: "roi_pool_conv5"
  roi_align_param {
    pooled_w: 6
    pooled_h: 6
    spatial_scale: 0.0625 # 1/16
    pad_ratio: 0
    bi_type: 1
    is_multi_interpolate: true
  }
}

#========= fully connected ============
layer {
  name: "ip6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "ip6"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "relu6"
  type: "ReLU"
  bottom: "ip6"
  top: "ip6"
}

layer {
  name: "drop6"
  type: "Dropout"
  bottom: "ip6"
  top: "ip6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}


layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "ip6"
  top: "bbox_pred"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  inner_product_param {
    num_output: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_target"
  bottom: 'bbox_inside_weights'
  bottom: 'bbox_outside_weights'
  top: "bbox_loss"
  loss_weight: 1
}

layer {
  name: "clssify"
  type: "InnerProduct"
  bottom: "ip6"
  top: "clssify"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "clssify"
  bottom: "label"
  top: "loss"
}
